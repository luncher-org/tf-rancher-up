###### !! Required variables !! ######

## -- The prefix used in front of all AWS resources
prefix = "<RESOURCES_PREFIX>"

# -- The necessary variables for login via CLI to the AWS console. If you will use these variables, also uncomment them in the provider.tf file. If you don't configure anything, the ~/.aws/credentials file will be looked for
# aws_access_key    = <ACCESS_KEY>
# aws_secret_key    = <SECRET_KEY>
# aws_session_token = <SESSION_TOKEN>

## -- AWS Region to create the resources
aws_region = "<REGION>"

#Ref. https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html

## -- Specify if a new SSH key pair needs to be created for the instances
# create_ssh_key_pair = true

## -- If you want to use an existing key pair, specify its name
# ssh_key_pair_name = null

#Ref. https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html

## -- The full path where is present the pre-generated SSH PRIVATE key (not generated by Terraform); if "create_ssh_key_pair = false" this variable must be set
# ssh_private_key_path = null

## -- The full path where is present the pre-generated SSH PUBLIC key (not generated by Terraform); if "create_ssh_key_pair = false" this variable must be set
# ssh_public_key_path = null

## - Specify whether VPC / Subnet should be created for the instances
# create_vpc = null

## -- Range of private IPs available for the AWS VPC
# vpc_ip_cidr_range = "10.0.0.0/16"

## -- AWS VPC used for all resources
# vpc_id = null

## -- AWS Subnet used for all resources
# subnet_id = null

## -- AWS Security Group used for all resources
# create_security_group = null

#Ref. https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-groups.html

## -- The number of nodes
instance_count = 3

## -- The name of a AWS EC2 machine type
# instance_type = "t3.medium"

## -- Use spot instances
# spot_instances = false

## -- Size of the disk attached to each node, specified in GB
# instance_disk_size = 80

## -- If the Security Group was created manually, it can be entered here
# instance_security_group_id = null

## -- Username used to allow access to VMs via SSH key exchange
ssh_username = "ubuntu"

## -- Script that will run when the VMs start
# user_data = ""

## -- Waiting time (in seconds)
# waiting_time = 180

## -- RKE2 version
# rke2_version = "v1.28.3+rke2r2"

## -- RKE2 token, override the programmatically generated token
# rke2_token = "string here"

## -- RKE2 custom config file
# rke2_config = "<RKE2_CONFIG_FILE>"

## -- (A) Create a new keypair in AWS
create_ssh_key_pair = true

## -- Override the default (./${prefix}_ssh_private_key.pem) path where this SSH key is written
# ssh_key_pair_path = "/path/to/private/key.pem"

## -- RKE2 KUBECONFIG file path
# kube_config_path = "<KUBE_CONFIG_PATH>"

## -- RKE2 KUBECONFIG file
# kube_config_filename = "<KUBE_CONFIG_FILENAME>"

## -- Bootstrap the Rancher installation
# bootstrap_rancher = false

## -- Hostname to set when installing Rancher
rancher_hostname = "rancher"

## -- Password to set when installing Rancher
rancher_password = "at-least-12-characters"

## -- Rancher version to use when installing the Rancher helm chart, otherwise use the latest in the stable repository
# rancher_version = "2.7.3"

## -- Rancher ingressClassName value
# rancher_ingress_class_name = "nginx"

## -- Rancher serviceType value
# rancher_service_type = "ClusterIP"